{"version":3,"file":"static/js/899.65505bd3.chunk.js","mappings":"6HAUA,QARA,SAAwBA,GACpB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAACF,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,WAAWA,EAAAA,EAAAA,KAAA,cAG9J,C,wHCoDA,MAWA,GAAeI,EAAAA,EAAAA,KAXUC,IACd,CACHC,oBAAqBD,EAAME,KAAKD,oBAChCE,WAAWA,EAAAA,EAAAA,GAAUH,OAIDI,IACjBC,EAAAA,EAAAA,IAAmB,CAACC,6BAA4B,MAAEF,IAG7D,EA/DA,SAA6BV,GAMzB,OAJJa,EAAAA,EAAAA,YAAU,KACNb,EAAMY,8BAA8B,GACtC,KAGMR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,CACtCH,EAAMS,YAAaR,EAAAA,EAAAA,KAACa,EAAAA,EAAc,KACnCb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBAERC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACMH,EAAMO,sBAAuBN,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qCAEvCC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EAEAF,EAAAA,EAAAA,KAAA,SAAAE,UACUC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAIhBF,EAAAA,EAAAA,KAAA,SAAAE,SAEEH,EAAMO,oBAAoBQ,OAAS,EAClCf,EAAMO,oBAAoBS,KAAKC,IACjCb,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACGF,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQC,OACbjB,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQE,QAAQC,SACrBnB,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQE,QAAQE,SACrBpB,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQK,YACbrB,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQM,KAAKC,WAAWC,MAAM,KAAK,MACxCxB,EAAAA,EAAAA,KAAA,MAAAE,SAAKc,EAAQS,aANPT,EAAQC,OAQd,eAWZ,G,iBCzDO,SAAST,EAAUH,GACtB,QAAGA,EAAMqB,QAAQlB,SAIrB,C","sources":["components/LoadingSpinner/LoadingSpinner.js","pages/UserPurchaseHistory/UserPurchaseHistory.js","store/selectors/spinnerSelectors.js"],"sourcesContent":["import \"./LoadingSpinner.css\";\r\n\r\nfunction LoadingSpinner(props) {\r\n    return (\r\n        <div className=\"spinner\">\r\n        <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner","import { bindActionCreators } from \"redux\"\r\nimport { getUserPurchaseHistoryAction } from \"../../store/actions/authActions\"\r\nimport { connect } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport \"./UserPurchaseHistory.css\"\r\nimport { isLoading } from \"../../store/selectors/spinnerSelectors\"\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\"\r\n\r\nfunction UserPurchaseHistory(props) {\r\n\r\nuseEffect(() => {\r\n    props.getUserPurchaseHistoryAction()\r\n},[])\r\n\r\n    return (\r\n        <div className=\"purchase-history-container\">\r\n            {props.isLoading && <LoadingSpinner />}\r\n            <h1>Purchase History</h1>\r\n\r\n        <div>\r\n            {!props.userPurchaseHistory && <h3>You haven't bought anything yet</h3>}\r\n\r\n        <table>\r\n\r\n        <thead>\r\n                  <tr>\r\n                    <th>order â„–</th>\r\n                    <th>Brand</th>\r\n                    <th>Model</th>\r\n                    <th>quantity</th>\r\n                    <th>date</th>\r\n                    <th>totalSum</th>\r\n                  </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n\r\n        { props.userPurchaseHistory.length > 0\r\n        ? (props.userPurchaseHistory.map((details) => \r\n         <tr key={details._id}>\r\n            <td>{details._id}</td>\r\n            <td>{details.watchId.brand}</td>\r\n            <td>{details.watchId.model}</td>\r\n            <td>{details.quantity}</td>\r\n            <td>{details.date.toString().split('T')[0]}</td>\r\n            <td>{details.totalSum}</td>\r\n         </tr>))\r\n         : (null)\r\n         }\r\n\r\n        </tbody>\r\n\r\n        </table>\r\n\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPurchaseHistory: state.auth.userPurchaseHistory,\r\n        isLoading: isLoading(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({getUserPurchaseHistoryAction},dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UserPurchaseHistory)","\r\nexport function isLoading(state) {\r\n    if(state.spinner.isLoading) {\r\n        return true;\r\n    }\r\n    return false;\r\n}"],"names":["props","_jsx","className","children","_jsxs","connect","state","userPurchaseHistory","auth","isLoading","dispatch","bindActionCreators","getUserPurchaseHistoryAction","useEffect","LoadingSpinner","length","map","details","_id","watchId","brand","model","quantity","date","toString","split","totalSum","spinner"],"sourceRoot":""}