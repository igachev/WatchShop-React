{"version":3,"file":"static/js/878.b4e4dbcb.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.js","components/LoadingSpinner/LoadingSpinner.js","pages/Register/Register.js","store/selectors/spinnerSelectors.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./AuthForm.css\"\r\n\r\nfunction AuthForm({type,onSubmit,errorMessage}) {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [repeatPassword,setRepeatPassword] = useState('')\r\n\r\n    let errorsObj = {email:'',password:'',repeatPassword:''}\r\n    const [errors,setErrors] = useState(errorsObj)\r\n\r\n    const navigation = useNavigate()\r\n\r\n    const isRegister = type === 'register'\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        let error = false;\r\n        let errorObj = {...errorsObj}\r\n\r\n        if(email === '') {\r\n            error = true;\r\n            errorObj.email = 'Email is required'\r\n        }\r\n\r\n        if(password === '') {\r\n            error = true;\r\n            errorObj.password = 'Password is required'\r\n        }\r\n\r\n        if(isRegister && repeatPassword === '') {\r\n            error = true;\r\n            errorObj.repeatPassword = 'Repeat Password is required'\r\n        }\r\n\r\n        setErrors(errorObj)\r\n\r\n        if(error) {\r\n            return;\r\n        }\r\n\r\n        if(isRegister) {\r\n            onSubmit(email,password,repeatPassword,navigation)\r\n        }\r\n        else {\r\n            onSubmit(email,password,navigation)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={`${type}-container`}>\r\n            \r\n        <div className={`${type}-form-container`}>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n                <label>Email:</label>\r\n                <input \r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)} />\r\n            </div>\r\n\r\n            {errors.email && <div className=\"validation-error\">{errors.email}</div>}\r\n\r\n            <div>\r\n                <label>Password:</label>\r\n                <input \r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n\r\n            {errors.password && <div className=\"validation-error\">{errors.password}</div>}\r\n\r\n            {isRegister && (\r\n                <div>\r\n                <label >Repeat Password</label>\r\n                <input \r\n                type=\"password\"\r\n                value={repeatPassword}\r\n                onChange={(e) => setRepeatPassword(e.target.value)} />\r\n    \r\n                {errors.repeatPassword && <div className=\"validation-error\">{errors.repeatPassword}</div>}\r\n    \r\n            </div>\r\n            )}\r\n\r\n            <div className={`${type}-btn`}>\r\n                <button type=\"submit\">{type === 'register' ? 'Register' : 'Login'}</button>\r\n            </div>\r\n\r\n            </form>\r\n\r\n        {errorMessage && <div className=\"validation-error\">{errorMessage}</div>}\r\n\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthForm","import \"./LoadingSpinner.css\";\r\n\r\nfunction LoadingSpinner(props) {\r\n    return (\r\n        <div className=\"spinner\">\r\n        <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner","\r\nimport { connect } from \"react-redux\"\r\nimport { registerAction } from \"../../store/actions/authActions\"\r\nimport \"./Register.css\"\r\nimport { isLoading } from \"../../store/selectors/spinnerSelectors\"\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport AuthForm from \"../../components/AuthForm/AuthForm\"\r\n\r\nfunction Register(props) {\r\n\r\n    return (\r\n        <div className=\"register-outer-container\">\r\n            {props.isLoading && <LoadingSpinner />}\r\n            <h1>Register Page</h1>\r\n\r\n        <AuthForm \r\n        type=\"register\"\r\n        onSubmit={props.registerAction}\r\n        errorMessage={props.errorMessage}\r\n        />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        isLoading: isLoading(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({registerAction},dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Register)","\r\nexport function isLoading(state) {\r\n    if(state.spinner.isLoading) {\r\n        return true;\r\n    }\r\n    return false;\r\n}"],"names":["_ref","type","onSubmit","errorMessage","email","setEmail","useState","password","setPassword","repeatPassword","setRepeatPassword","errorsObj","errors","setErrors","navigation","useNavigate","isRegister","_jsx","className","concat","children","_jsxs","e","preventDefault","error","errorObj","value","onChange","target","props","connect","state","auth","isLoading","dispatch","bindActionCreators","registerAction","LoadingSpinner","AuthForm","spinner"],"sourceRoot":""}